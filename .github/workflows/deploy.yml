name: Deploy to Zone.ee

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
      REDIS_ENABLED: ${{ secrets.REDIS_ENABLED }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}  
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
      NEXT_PUBLIC_STRIPE_WEBHOOK_SECRET: ${{ secrets.NEXT_PUBLIC_STRIPE_WEBHOOK_SECRET }}
      DISCOGS_API_TOKEN: ${{ secrets.DISCOGS_API_TOKEN }}
      DISCOGS_API_SECRET: ${{ secrets.DISCOGS_API_SECRET }}
      DISCOGS_CONSUMER_KEY: ${{ secrets.DISCOGS_CONSUMER_KEY }}
      DISCOGS_CONSUMER_SECRET: ${{ secrets.DISCOGS_CONSUMER_SECRET }}
      
    steps:
      - name: Checkout to main
        uses: actions/checkout@main
      
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Build application
        run: npm run build
        
      - name: Generate Prisma client
        run: npx prisma generate
        
      - name: Upload built files
        uses: actions/upload-artifact@v3
        with:
          name: production-files
          path: ./.next

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout to main
        uses: actions/checkout@main
        
      - name: Download built files
        uses: actions/download-artifact@v2
        with:
          name: production-files
          path: ./.next
          
      - name: Connect to server over SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST_SERVER_IP }} >> ~/.ssh/known_hosts
          
      - name: Deploy to server
        run: |
          rsync -vrm ./ ${{ secrets.SSH_LOGIN_CREDS }}:${{ secrets.PROJECT_PATH }} --exclude .git --exclude node_modules
          ssh ${{ secrets.SSH_LOGIN_CREDS }} "cd ${{ secrets.PROJECT_PATH }} && npm ci --legacy-peer-deps && npx prisma migrate deploy && pm2 describe ${{ secrets.PM2_APP_NAME }} > /dev/null && pm2 restart ${{ secrets.PM2_APP_NAME }} || pm2 start ${{ secrets.PM2_APP_NAME }}"