[2025-03-04T09:00:18.259Z] [INFO] Refreshing inventory: clearing caches
[2025-03-04T09:00:18.273Z] [INFO] Cleared 2 inventory cache entries and 3 record cache entries
[2025-03-04T09:00:18.273Z] [INFO] Fetching latest inventory data to rebuild cache
[2025-03-04T09:00:19.603Z] [INFO] Inventory refresh complete - cache rebuilt with fresh data
[2025-03-04T09:00:57.922Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T09:44:19.457Z] [ERROR] Registration error: 
Invalid `prisma.user.create()` invocation:

{
  data: {
    email: "mehiskont+1@gmail.com",
    name: "me to",
    hashedPassword: "$2b$12$pd3aWfl4s6kr8OT4FlGREeGLRGDz50WyW4UtRvYk5AIrQv3IE8HKe",
    ~~~~~~~~~~~~~~
?   id?: String,
?   emailVerified?: DateTime | Null,
?   image?: String | Null,
?   phone?: String | Null,
?   address?: String | Null,
?   city?: String | Null,
?   state?: String | Null,
?   country?: String | Null,
?   postalCode?: String | Null,
?   accounts?: AccountCreateNestedManyWithoutUserInput,
?   sessions?: SessionCreateNestedManyWithoutUserInput,
?   orders?: OrderCreateNestedManyWithoutUserInput
  }
}

Unknown argument `hashedPassword`. Available options are marked with ?.
[2025-03-04T10:05:14.716Z] [INFO] User registered successfully: mehiskont+11@gmail.com
[2025-03-04T10:05:16.341Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T10:07:40.738Z] [INFO] Password reset email sent to: mehiskont+11@gmail.com
[2025-03-04T15:51:25.464Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T15:51:48.619Z] [INFO] User registered successfully: mehiskont+112@gmail.com
[2025-03-04T15:51:49.909Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T15:52:34.062Z] [ERROR] Password reset email error: {"statusCode":403,"message":"You can only send testing emails to your own email address (mehiskont@gmail.com). To send emails to other recipients, please verify a domain at resend.com/domains, and change the `from` address to an email using this domain.","name":"validation_error"}
[2025-03-04T15:52:34.062Z] [ERROR] Failed to send password reset email: Email sending failed: You can only send testing emails to your own email address (mehiskont@gmail.com). To send emails to other recipients, please verify a domain at resend.com/domains, and change the `from` address to an email using this domain.
[2025-03-04T15:52:34.063Z] [ERROR] Password reset error: Email sending failed: You can only send testing emails to your own email address (mehiskont@gmail.com). To send emails to other recipients, please verify a domain at resend.com/domains, and change the `from` address to an email using this domain.
[2025-03-04T15:53:53.544Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:09:50.789Z] [ERROR] Registration error: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `db.ccqgafetgnpzybsjkaoj.supabase.co:5432`

Please make sure your database server is running at `db.ccqgafetgnpzybsjkaoj.supabase.co:5432`.
[2025-03-04T16:22:37.332Z] [ERROR] Registration error: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `db.ccqgafetgnpzybsjkaoj.supabase.co:5432`

Please make sure your database server is running at `db.ccqgafetgnpzybsjkaoj.supabase.co:5432`.
[2025-03-04T16:23:15.415Z] [ERROR] Registration error: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `db.ccqgafetgnpzybsjkaoj.supabase.co:5432`

Please make sure your database server is running at `db.ccqgafetgnpzybsjkaoj.supabase.co:5432`.
[2025-03-04T16:23:26.495Z] [ERROR] Registration error: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `db.ccqgafetgnpzybsjkaoj.supabase.co:5432`

Please make sure your database server is running at `db.ccqgafetgnpzybsjkaoj.supabase.co:5432`.
[2025-03-04T16:29:23.368Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:29:35.638Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:31:36.807Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:33:30.802Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:35:26.974Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:38:25.205Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:38:43.363Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:39:33.963Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:10.054Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:13.155Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:13.182Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:25.106Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:25.402Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:25.708Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:25.987Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:26.289Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:26.562Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:26.836Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:27.110Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:27.382Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:27.657Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:27.950Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:28.244Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:28.514Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:28.786Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:29.107Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:29.377Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:29.656Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:29.926Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:30.234Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:30.526Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:30.795Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:31.107Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:31.396Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:31.665Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:31.937Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:32.212Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:32.485Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:32.757Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:40:33.053Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:04.108Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:08.506Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:08.793Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:09.063Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:09.334Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:09.602Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:09.872Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:10.168Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:10.455Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:10.752Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:11.035Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:11.312Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:11.581Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:11.863Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:12.143Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:12.466Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:12.741Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:13.018Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:13.296Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:13.573Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:13.826Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:14.104Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:14.386Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:14.661Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:14.950Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:15.228Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:15.521Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:15.804Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:16.078Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:16.363Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:16.641Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:16.921Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:17.211Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:17.500Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:17.923Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:18.211Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:18.504Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:18.790Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:19.067Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:19.356Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:19.645Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:19.925Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:20.200Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:20.471Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:20.743Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:22.581Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:22.994Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:23.271Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:23.538Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:23.808Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:24.076Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:24.348Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:24.622Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:24.895Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:25.194Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:25.464Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:25.731Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:26.002Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:26.313Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:26.582Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:26.849Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:27.134Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:27.458Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:27.757Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:28.116Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:30.332Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:30.604Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:30.896Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:31.180Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:31.468Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:31.758Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:32.032Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:32.314Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:32.591Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:32.894Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:33.183Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:33.466Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:33.759Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:34.059Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:39.983Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:40.303Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:40.575Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:40.862Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:41.150Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:41.443Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:41.725Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:42.005Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:42.284Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:42.561Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:42.838Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:43.136Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:43.426Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:43.703Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:43.976Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:44.245Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:44.516Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:44.786Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:45.063Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:45.341Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:45.613Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:45.890Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:46.162Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:46.435Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:46.735Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:47.015Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:47.291Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:47.564Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:47.838Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:48.113Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:48.423Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:48.696Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:48.993Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:49.265Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:49.549Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:49.826Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:50.124Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:50.421Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:50.720Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:53.611Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:53.933Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:54.213Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:54.488Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:54.773Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:55.054Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:55.340Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:55.616Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:55.892Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:56.175Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:56.455Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:56.766Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:57.046Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:57.329Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:57.607Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:57.881Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:58.164Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:58.445Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:58.726Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:59.013Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:59.291Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:59.578Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:47:59.862Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:00.162Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:00.448Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:00.743Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:01.035Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:01.329Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:01.611Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:01.939Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:02.226Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:02.509Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:02.785Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:03.060Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:03.333Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:03.610Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:03.888Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:04.168Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:04.469Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:04.771Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:05.046Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:05.322Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:05.600Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:05.873Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:06.151Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:06.431Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:06.736Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:07.012Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:07.287Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:07.561Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:07.834Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:08.134Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:08.409Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:08.683Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:08.957Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:09.232Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:12.494Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:12.816Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:13.100Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:13.390Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:13.695Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:13.973Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:14.269Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:14.544Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:14.825Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:15.104Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:15.403Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:15.684Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:15.977Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:16.292Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:16.577Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:16.875Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:17.158Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:17.453Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:17.747Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:18.031Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:18.319Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:18.599Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:18.882Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:19.167Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:19.477Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:19.761Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:20.054Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:20.362Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:20.673Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:21.013Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:21.334Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:21.631Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:21.911Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:22.213Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:24.414Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:24.802Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:25.102Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:25.392Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:25.674Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:25.960Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:26.249Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:26.539Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:26.855Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:27.143Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:27.435Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:27.716Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:28.008Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:28.395Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:28.696Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:28.974Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:29.255Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:29.538Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:29.819Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:30.103Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:30.384Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:30.668Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:30.959Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:31.255Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:31.543Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:31.830Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:32.108Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:32.441Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:32.722Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:33.008Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:33.313Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:33.617Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:33.896Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:34.210Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:35.000Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:35.314Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:35.606Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:35.885Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:36.168Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:36.452Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:36.753Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:37.078Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:37.368Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:37.667Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:39.618Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:39.942Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:40.237Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:40.531Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:40.853Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:41.132Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:41.439Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:41.721Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:42.049Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:42.334Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:42.622Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:42.914Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:43.197Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:43.494Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:43.812Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:44.141Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:44.425Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:44.711Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:44.992Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:45.279Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:45.574Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:45.937Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:46.237Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:46.526Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:46.811Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:47.101Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:47.388Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:47.675Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:47.958Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:48.275Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:48.588Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:48.902Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:49.196Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:49.483Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:49.759Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:50.047Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:50.371Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:50.651Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:50.943Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:51.251Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:51.535Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:51.816Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:52.098Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:52.382Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:52.698Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:52.998Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:53.295Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:53.611Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:53.928Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:54.228Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:54.538Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:54.871Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:55.158Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:55.441Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:55.725Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:56.009Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:56.292Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:56.578Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:56.859Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:57.178Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:57.466Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:57.774Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:58.062Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:58.345Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:58.630Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:58.915Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:59.214Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:59.497Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:48:59.817Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:00.103Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:00.392Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:00.738Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:01.032Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:01.316Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:01.601Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:01.889Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:02.172Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:02.456Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:02.742Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:03.032Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:03.317Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:03.604Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:03.918Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:04.207Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:04.490Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:04.771Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:05.056Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:05.351Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:05.634Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:05.944Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:06.227Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:06.509Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:06.827Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:07.123Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:07.408Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:07.697Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:07.983Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:08.268Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:08.552Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:08.836Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:09.130Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:09.415Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:09.695Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:09.978Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:10.287Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:10.605Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:10.898Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:11.181Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:11.477Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:11.768Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:12.056Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:12.369Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:12.658Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:12.980Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:13.278Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:13.566Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:13.850Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:14.134Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:14.429Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:14.722Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:15.009Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:15.296Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:15.603Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:15.884Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:16.172Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:16.456Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:16.743Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:17.032Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:17.324Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:17.667Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:49:18.039Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:36.087Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:40.062Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:40.078Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:40.365Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:40.645Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:40.929Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:41.208Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:41.485Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:41.759Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:42.035Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:42.326Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:42.608Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:42.882Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:43.162Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:43.435Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:43.713Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:43.990Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:44.293Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:44.566Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:44.867Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:45.142Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:45.417Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:45.691Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:45.972Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:46.279Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:46.559Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:46.833Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:47.121Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:47.396Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:47.673Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:47.939Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:48.214Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:48.515Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:48.786Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:49.063Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:49.341Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:49.617Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:49.919Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:50.197Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:50.511Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:50.794Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:51.077Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:51.351Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:53:51.629Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:18.068Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:25.280Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:25.311Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:25.611Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:25.944Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:26.227Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:26.502Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:26.806Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:27.090Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:27.364Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:27.649Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:27.930Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:28.219Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:28.520Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:28.799Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:29.074Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:29.344Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:29.628Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:29.933Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:30.269Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:30.568Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:30.850Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:31.123Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:31.456Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:31.754Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:32.024Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:32.317Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:32.600Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:38.204Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:38.510Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:38.792Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:39.072Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:39.343Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:39.615Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:39.889Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:40.166Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:40.450Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:40.724Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:40.994Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:41.270Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:41.555Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:41.830Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:42.124Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:42.421Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:42.704Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:42.997Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:43.274Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:43.548Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:43.860Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:44.132Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:44.433Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:45.985Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:46.293Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:46.564Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:46.841Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:47.116Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:47.391Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:47.661Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:47.930Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:48.199Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:48.470Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:48.739Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:49.012Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:49.281Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:49.570Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:49.860Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:50.154Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:50.430Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:50.702Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:51.007Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:51.281Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:51.552Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:51.828Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:52.114Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:52.415Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:52.699Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:52.978Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:53.264Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:53.593Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:53.882Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:54.162Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:54.438Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:54.749Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:55:55.023Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:49.549Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:52.571Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:52.608Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:52.909Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:53.230Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:53.532Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:53.840Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:54.145Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:54.452Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:54.746Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:55.044Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:55.346Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:55.636Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:55.922Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:56.256Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:56.557Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:56.836Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:57.116Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:57.406Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:57.703Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:57.992Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:58.308Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:58.585Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:58.903Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:59.196Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:59.482Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:58:59.765Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:00.045Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:00.349Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:00.638Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:00.916Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:01.206Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:01.490Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:01.768Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:02.049Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:02.382Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:02.663Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:16.216Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:18.923Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:18.939Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:19.220Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:19.504Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:19.781Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:20.060Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:20.349Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:20.629Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:20.905Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:21.187Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:21.467Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:21.766Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:22.048Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:22.329Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:22.607Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:22.883Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:23.234Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:23.526Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:23.812Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T16:59:24.095Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:02:00.874Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:02:04.208Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:02:14.232Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:07:04.329Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:07:09.136Z] [INFO] Refreshing inventory: clearing caches
[2025-03-04T17:07:09.140Z] [INFO] Cleared 16 inventory cache entries and 1 record cache entries
[2025-03-04T17:07:09.140Z] [INFO] Fetching latest inventory data to rebuild cache
[2025-03-04T17:07:10.046Z] [INFO] Inventory refresh complete - cache rebuilt with fresh data
[2025-03-04T17:24:17.675Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:24:23.887Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:26:21.293Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:26:24.497Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:28:17.085Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:28:45.321Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:31:08.392Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:32:05.294Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:32:37.709Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:32:43.183Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:33:02.444Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:33:06.156Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:33:32.238Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:35:48.216Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:35:51.594Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:35:52.642Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:36:21.416Z] [INFO] Resend client initialized with API key: re_U2Su4...
[2025-03-04T17:40:45.451Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:40:45.884Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:40:45.885Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:40:45.885Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:40:45.885Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:40:45.885Z] [INFO] Session ID: undefined
[2025-03-04T17:40:45.885Z] [INFO] Payment status: paid
[2025-03-04T17:40:45.885Z] [INFO] Session status: complete
[2025-03-04T17:40:45.885Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:40:46.065Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:05.795Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:06.068Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:06.068Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:06.068Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:06.068Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:06.069Z] [INFO] Session ID: undefined
[2025-03-04T17:41:06.069Z] [INFO] Payment status: paid
[2025-03-04T17:41:06.069Z] [INFO] Session status: complete
[2025-03-04T17:41:06.069Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:06.069Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:06.277Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:06.432Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:06.536Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:06.536Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:06.536Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:06.536Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:06.536Z] [INFO] Session ID: undefined
[2025-03-04T17:41:06.536Z] [INFO] Payment status: paid
[2025-03-04T17:41:06.536Z] [INFO] Session status: complete
[2025-03-04T17:41:06.537Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:06.540Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:06.574Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:06.705Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:06.837Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:06.838Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:06.838Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:06.838Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:06.838Z] [INFO] Session ID: undefined
[2025-03-04T17:41:06.838Z] [INFO] Payment status: paid
[2025-03-04T17:41:06.838Z] [INFO] Session status: complete
[2025-03-04T17:41:06.838Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:06.839Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:06.852Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:06.988Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:07.088Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.088Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.088Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.089Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.089Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.089Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.089Z] [INFO] Session status: complete
[2025-03-04T17:41:07.089Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.090Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.092Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.092Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.092Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.092Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.092Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.092Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.092Z] [INFO] Session status: complete
[2025-03-04T17:41:07.092Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.093Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.126Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:07.262Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:07.357Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.358Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.358Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.358Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.358Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.358Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.358Z] [INFO] Session status: complete
[2025-03-04T17:41:07.358Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.359Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.384Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.384Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.384Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.384Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.384Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.384Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.384Z] [INFO] Session status: complete
[2025-03-04T17:41:07.384Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.385Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.400Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:07.512Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.512Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.512Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.512Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.512Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.512Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.512Z] [INFO] Session status: complete
[2025-03-04T17:41:07.512Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.513Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.518Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:07.557Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.557Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.557Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.557Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.557Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.557Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.557Z] [INFO] Session status: complete
[2025-03-04T17:41:07.557Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.558Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.620Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.620Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.620Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.620Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.620Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.620Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.620Z] [INFO] Session status: complete
[2025-03-04T17:41:07.620Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.621Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.663Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:07.729Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.729Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.729Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.729Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.729Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.729Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.729Z] [INFO] Session status: complete
[2025-03-04T17:41:07.729Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.730Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.762Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:07.856Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:07.886Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.886Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.886Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.886Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.886Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.886Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.886Z] [INFO] Session status: complete
[2025-03-04T17:41:07.886Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.887Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:07.974Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:07.974Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:07.974Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:07.974Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:07.974Z] [INFO] Session ID: undefined
[2025-03-04T17:41:07.974Z] [INFO] Payment status: paid
[2025-03-04T17:41:07.974Z] [INFO] Session status: complete
[2025-03-04T17:41:07.974Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:07.976Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.026Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:08.099Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:08.099Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:08.099Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:08.099Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:08.099Z] [INFO] Session ID: undefined
[2025-03-04T17:41:08.099Z] [INFO] Payment status: paid
[2025-03-04T17:41:08.099Z] [INFO] Session status: complete
[2025-03-04T17:41:08.099Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:08.100Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.140Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:08.240Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:08.351Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:08.351Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:08.351Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:08.352Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:08.352Z] [INFO] Session ID: undefined
[2025-03-04T17:41:08.352Z] [INFO] Payment status: paid
[2025-03-04T17:41:08.352Z] [INFO] Session status: complete
[2025-03-04T17:41:08.352Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:08.353Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.386Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:08.389Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:08.389Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:08.389Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:08.389Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:08.389Z] [INFO] Session ID: undefined
[2025-03-04T17:41:08.389Z] [INFO] Payment status: paid
[2025-03-04T17:41:08.389Z] [INFO] Session status: complete
[2025-03-04T17:41:08.389Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:08.390Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.453Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:08.454Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:08.454Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:08.454Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:08.454Z] [INFO] Session ID: undefined
[2025-03-04T17:41:08.454Z] [INFO] Payment status: paid
[2025-03-04T17:41:08.454Z] [INFO] Session status: complete
[2025-03-04T17:41:08.454Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:08.470Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.482Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:08.590Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:08.602Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:08.602Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:08.602Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:08.603Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:08.603Z] [INFO] Session ID: undefined
[2025-03-04T17:41:08.603Z] [INFO] Payment status: paid
[2025-03-04T17:41:08.603Z] [INFO] Session status: complete
[2025-03-04T17:41:08.603Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:08.604Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.691Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:08.696Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:08.697Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:08.697Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:08.697Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:08.697Z] [INFO] Session ID: undefined
[2025-03-04T17:41:08.697Z] [INFO] Payment status: paid
[2025-03-04T17:41:08.697Z] [INFO] Session status: complete
[2025-03-04T17:41:08.697Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:08.698Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.810Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:08.810Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:08.810Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:08.810Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:08.810Z] [INFO] Session ID: undefined
[2025-03-04T17:41:08.810Z] [INFO] Payment status: paid
[2025-03-04T17:41:08.810Z] [INFO] Session status: complete
[2025-03-04T17:41:08.810Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:08.811Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.847Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:08.937Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:08.938Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:08.938Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:08.938Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:08.938Z] [INFO] Session ID: undefined
[2025-03-04T17:41:08.938Z] [INFO] Payment status: paid
[2025-03-04T17:41:08.938Z] [INFO] Session status: complete
[2025-03-04T17:41:08.938Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:08.939Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:08.971Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.071Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.077Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:09.077Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:09.077Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:09.077Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:09.077Z] [INFO] Session ID: undefined
[2025-03-04T17:41:09.077Z] [INFO] Payment status: paid
[2025-03-04T17:41:09.077Z] [INFO] Session status: complete
[2025-03-04T17:41:09.077Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:09.078Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:09.226Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.247Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:09.247Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:09.247Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:09.247Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:09.247Z] [INFO] Session ID: undefined
[2025-03-04T17:41:09.247Z] [INFO] Payment status: paid
[2025-03-04T17:41:09.247Z] [INFO] Session status: complete
[2025-03-04T17:41:09.247Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:09.248Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:09.349Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:09.349Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:09.350Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:09.350Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:09.350Z] [INFO] Session ID: undefined
[2025-03-04T17:41:09.350Z] [INFO] Payment status: paid
[2025-03-04T17:41:09.350Z] [INFO] Session status: complete
[2025-03-04T17:41:09.350Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:09.351Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:09.364Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.465Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:09.466Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:09.466Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:09.466Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:09.466Z] [INFO] Session ID: undefined
[2025-03-04T17:41:09.466Z] [INFO] Payment status: paid
[2025-03-04T17:41:09.466Z] [INFO] Session status: complete
[2025-03-04T17:41:09.466Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:09.467Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:09.502Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.597Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:09.597Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:09.597Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:09.597Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:09.597Z] [INFO] Session ID: undefined
[2025-03-04T17:41:09.597Z] [INFO] Payment status: paid
[2025-03-04T17:41:09.597Z] [INFO] Session status: complete
[2025-03-04T17:41:09.597Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:09.598Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:09.603Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.704Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.767Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:09.767Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:09.768Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:09.768Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:09.768Z] [INFO] Session ID: undefined
[2025-03-04T17:41:09.768Z] [INFO] Payment status: paid
[2025-03-04T17:41:09.768Z] [INFO] Session status: complete
[2025-03-04T17:41:09.768Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:09.768Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:09.824Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.916Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:09.916Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:09.916Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:09.916Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:09.916Z] [INFO] Session ID: undefined
[2025-03-04T17:41:09.916Z] [INFO] Payment status: paid
[2025-03-04T17:41:09.916Z] [INFO] Session status: complete
[2025-03-04T17:41:09.916Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:09.918Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:09.954Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:09.986Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:09.986Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:09.986Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:09.987Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:09.987Z] [INFO] Session ID: undefined
[2025-03-04T17:41:09.987Z] [INFO] Payment status: paid
[2025-03-04T17:41:09.987Z] [INFO] Session status: complete
[2025-03-04T17:41:09.987Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:09.987Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:10.078Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:10.089Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:10.090Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:10.090Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:10.090Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:10.090Z] [INFO] Session ID: undefined
[2025-03-04T17:41:10.090Z] [INFO] Payment status: paid
[2025-03-04T17:41:10.090Z] [INFO] Session status: complete
[2025-03-04T17:41:10.090Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:10.090Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:10.193Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:10.193Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:10.194Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:10.194Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:10.194Z] [INFO] Session ID: undefined
[2025-03-04T17:41:10.194Z] [INFO] Payment status: paid
[2025-03-04T17:41:10.194Z] [INFO] Session status: complete
[2025-03-04T17:41:10.194Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:10.195Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:10.229Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:10.318Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:10.318Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:10.318Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:10.318Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:10.318Z] [INFO] Session ID: undefined
[2025-03-04T17:41:10.318Z] [INFO] Payment status: paid
[2025-03-04T17:41:10.318Z] [INFO] Session status: complete
[2025-03-04T17:41:10.318Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:10.319Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:10.358Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:10.467Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:10.467Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:10.467Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:10.467Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:10.467Z] [INFO] Session ID: undefined
[2025-03-04T17:41:10.467Z] [INFO] Payment status: paid
[2025-03-04T17:41:10.467Z] [INFO] Session status: complete
[2025-03-04T17:41:10.467Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:10.468Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:10.486Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:10.614Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:10.653Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:10.653Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:10.653Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:10.653Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:10.653Z] [INFO] Session ID: undefined
[2025-03-04T17:41:10.653Z] [INFO] Payment status: paid
[2025-03-04T17:41:10.653Z] [INFO] Session status: complete
[2025-03-04T17:41:10.653Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:10.654Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:10.755Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:10.755Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:10.755Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:10.756Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:10.756Z] [INFO] Session ID: undefined
[2025-03-04T17:41:10.756Z] [INFO] Payment status: paid
[2025-03-04T17:41:10.756Z] [INFO] Session status: complete
[2025-03-04T17:41:10.756Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:10.757Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:10.770Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:10.868Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:10.868Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:10.869Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:10.869Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:10.869Z] [INFO] Session ID: undefined
[2025-03-04T17:41:10.869Z] [INFO] Payment status: paid
[2025-03-04T17:41:10.869Z] [INFO] Session status: complete
[2025-03-04T17:41:10.869Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:10.870Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:10.905Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:11.027Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:11.032Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:11.032Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:11.033Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:11.033Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:11.033Z] [INFO] Session ID: undefined
[2025-03-04T17:41:11.033Z] [INFO] Payment status: paid
[2025-03-04T17:41:11.033Z] [INFO] Session status: complete
[2025-03-04T17:41:11.033Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:11.033Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:11.162Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:11.205Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:11.205Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:11.205Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:11.205Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:11.205Z] [INFO] Session ID: undefined
[2025-03-04T17:41:11.205Z] [INFO] Payment status: paid
[2025-03-04T17:41:11.205Z] [INFO] Session status: complete
[2025-03-04T17:41:11.205Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:11.206Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:11.328Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:11.328Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:11.328Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:11.328Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:11.328Z] [INFO] Session ID: undefined
[2025-03-04T17:41:11.328Z] [INFO] Payment status: paid
[2025-03-04T17:41:11.328Z] [INFO] Session status: complete
[2025-03-04T17:41:11.328Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:11.329Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:11.344Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:11.445Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:11.445Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:11.445Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:11.445Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:11.445Z] [INFO] Session ID: undefined
[2025-03-04T17:41:11.445Z] [INFO] Payment status: paid
[2025-03-04T17:41:11.446Z] [INFO] Session status: complete
[2025-03-04T17:41:11.446Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:11.446Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:11.484Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:11.587Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:11.588Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:11.588Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:11.588Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:11.588Z] [INFO] Session ID: undefined
[2025-03-04T17:41:11.588Z] [INFO] Payment status: paid
[2025-03-04T17:41:11.588Z] [INFO] Session status: complete
[2025-03-04T17:41:11.588Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:11.589Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:11.604Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:11.706Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:11.706Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:11.706Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:11.706Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:11.706Z] [INFO] Session ID: undefined
[2025-03-04T17:41:11.706Z] [INFO] Payment status: paid
[2025-03-04T17:41:11.706Z] [INFO] Session status: complete
[2025-03-04T17:41:11.706Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:11.707Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:11.742Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:11.851Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:11.851Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:11.851Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:11.851Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:11.851Z] [INFO] Session ID: undefined
[2025-03-04T17:41:11.851Z] [INFO] Payment status: paid
[2025-03-04T17:41:11.851Z] [INFO] Session status: complete
[2025-03-04T17:41:11.851Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:11.852Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:11.863Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:11.967Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:11.967Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:11.967Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:11.967Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:11.967Z] [INFO] Session ID: undefined
[2025-03-04T17:41:11.967Z] [INFO] Payment status: paid
[2025-03-04T17:41:11.967Z] [INFO] Session status: complete
[2025-03-04T17:41:11.967Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:11.968Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:12.001Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:12.121Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:12.121Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:12.121Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:12.121Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:12.121Z] [INFO] Session ID: undefined
[2025-03-04T17:41:12.121Z] [INFO] Payment status: paid
[2025-03-04T17:41:12.121Z] [INFO] Session status: complete
[2025-03-04T17:41:12.121Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:12.122Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:12.125Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:12.227Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:12.227Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:12.227Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:12.227Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:12.227Z] [INFO] Session ID: undefined
[2025-03-04T17:41:12.227Z] [INFO] Payment status: paid
[2025-03-04T17:41:12.227Z] [INFO] Session status: complete
[2025-03-04T17:41:12.227Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:12.228Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:12.259Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:12.371Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:12.371Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:12.371Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:12.371Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:12.371Z] [INFO] Session ID: undefined
[2025-03-04T17:41:12.371Z] [INFO] Payment status: paid
[2025-03-04T17:41:12.371Z] [INFO] Session status: complete
[2025-03-04T17:41:12.371Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:12.372Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:12.383Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:12.489Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:12.490Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:12.490Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:12.490Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:12.490Z] [INFO] Session ID: undefined
[2025-03-04T17:41:12.490Z] [INFO] Payment status: paid
[2025-03-04T17:41:12.490Z] [INFO] Session status: complete
[2025-03-04T17:41:12.490Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:12.491Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:12.506Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:12.668Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:12.668Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:12.668Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:12.668Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:12.668Z] [INFO] Session ID: undefined
[2025-03-04T17:41:12.668Z] [INFO] Payment status: paid
[2025-03-04T17:41:12.668Z] [INFO] Session status: complete
[2025-03-04T17:41:12.668Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:12.669Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:12.672Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:12.798Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:12.798Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:12.798Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:12.798Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:12.798Z] [INFO] Session ID: undefined
[2025-03-04T17:41:12.798Z] [INFO] Payment status: paid
[2025-03-04T17:41:12.798Z] [INFO] Session status: complete
[2025-03-04T17:41:12.798Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:12.799Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:12.838Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:12.922Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:12.922Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:12.922Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:12.922Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:12.922Z] [INFO] Session ID: undefined
[2025-03-04T17:41:12.922Z] [INFO] Payment status: paid
[2025-03-04T17:41:12.922Z] [INFO] Session status: complete
[2025-03-04T17:41:12.922Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:12.923Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:12.932Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.032Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.097Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.097Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.097Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.097Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.097Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.097Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.097Z] [INFO] Session status: complete
[2025-03-04T17:41:13.097Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.098Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:13.152Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.152Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.152Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.152Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.152Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.152Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.152Z] [INFO] Session status: complete
[2025-03-04T17:41:13.152Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.153Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:13.157Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.270Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.270Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.270Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.270Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.270Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.270Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.270Z] [INFO] Session status: complete
[2025-03-04T17:41:13.270Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.271Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:13.285Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.395Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.412Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.412Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.412Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.412Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.412Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.412Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.412Z] [INFO] Session status: complete
[2025-03-04T17:41:13.412Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.413Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:13.496Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.498Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.498Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.498Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.498Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.498Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.498Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.498Z] [INFO] Session status: complete
[2025-03-04T17:41:13.498Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.498Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:13.592Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.606Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.606Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.606Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.607Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.607Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.607Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.607Z] [INFO] Session status: complete
[2025-03-04T17:41:13.607Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.607Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:13.702Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.766Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.766Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.766Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.766Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.766Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.766Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.766Z] [INFO] Session status: complete
[2025-03-04T17:41:13.766Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.767Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:13.803Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.811Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.811Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.811Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.812Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.812Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.812Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.812Z] [INFO] Session status: complete
[2025-03-04T17:41:13.812Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.812Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:13.899Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:13.966Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:13.966Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:13.966Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:13.967Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:13.967Z] [INFO] Session ID: undefined
[2025-03-04T17:41:13.967Z] [INFO] Payment status: paid
[2025-03-04T17:41:13.967Z] [INFO] Session status: complete
[2025-03-04T17:41:13.967Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:13.968Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.004Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:14.022Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:14.022Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:14.022Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:14.022Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:14.022Z] [INFO] Session ID: undefined
[2025-03-04T17:41:14.022Z] [INFO] Payment status: paid
[2025-03-04T17:41:14.022Z] [INFO] Session status: complete
[2025-03-04T17:41:14.022Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:14.023Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.109Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:14.117Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:14.117Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:14.117Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:14.117Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:14.117Z] [INFO] Session ID: undefined
[2025-03-04T17:41:14.117Z] [INFO] Payment status: paid
[2025-03-04T17:41:14.117Z] [INFO] Session status: complete
[2025-03-04T17:41:14.117Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:14.117Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.221Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:14.221Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:14.221Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:14.221Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:14.221Z] [INFO] Session ID: undefined
[2025-03-04T17:41:14.221Z] [INFO] Payment status: paid
[2025-03-04T17:41:14.221Z] [INFO] Session status: complete
[2025-03-04T17:41:14.221Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:14.222Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.260Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:14.341Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:14.341Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:14.342Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:14.342Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:14.342Z] [INFO] Session ID: undefined
[2025-03-04T17:41:14.342Z] [INFO] Payment status: paid
[2025-03-04T17:41:14.342Z] [INFO] Session status: complete
[2025-03-04T17:41:14.342Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:14.343Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.379Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:14.484Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:14.484Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:14.484Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:14.484Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:14.484Z] [INFO] Session ID: undefined
[2025-03-04T17:41:14.484Z] [INFO] Payment status: paid
[2025-03-04T17:41:14.484Z] [INFO] Session status: complete
[2025-03-04T17:41:14.484Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:14.485Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.501Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:14.599Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:14.599Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:14.599Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:14.599Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:14.599Z] [INFO] Session ID: undefined
[2025-03-04T17:41:14.599Z] [INFO] Payment status: paid
[2025-03-04T17:41:14.600Z] [INFO] Session status: complete
[2025-03-04T17:41:14.600Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:14.601Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.638Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:14.741Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:14.741Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:14.741Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:14.741Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:14.741Z] [INFO] Session ID: undefined
[2025-03-04T17:41:14.741Z] [INFO] Payment status: paid
[2025-03-04T17:41:14.742Z] [INFO] Session status: complete
[2025-03-04T17:41:14.742Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:14.743Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.759Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:14.861Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:14.861Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:14.861Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:14.861Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:14.861Z] [INFO] Session ID: undefined
[2025-03-04T17:41:14.861Z] [INFO] Payment status: paid
[2025-03-04T17:41:14.861Z] [INFO] Session status: complete
[2025-03-04T17:41:14.861Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:14.862Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:14.894Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.006Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.006Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.006Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.006Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.006Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.006Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.006Z] [INFO] Session status: complete
[2025-03-04T17:41:15.006Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.006Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:15.012Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.117Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.117Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.118Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.118Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.118Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.118Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.118Z] [INFO] Session status: complete
[2025-03-04T17:41:15.118Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.119Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:15.174Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.288Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.296Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.296Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.297Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.297Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.297Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.297Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.297Z] [INFO] Session status: complete
[2025-03-04T17:41:15.297Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.297Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:15.427Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.467Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.467Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.467Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.467Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.467Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.467Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.467Z] [INFO] Session status: complete
[2025-03-04T17:41:15.467Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.468Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:15.559Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.628Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.628Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.629Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.629Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.629Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.629Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.629Z] [INFO] Session status: complete
[2025-03-04T17:41:15.629Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.630Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:15.663Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.682Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.682Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.682Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.682Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.682Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.682Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.682Z] [INFO] Session status: complete
[2025-03-04T17:41:15.682Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.683Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:15.765Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.772Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.773Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.773Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.773Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.773Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.773Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.773Z] [INFO] Session status: complete
[2025-03-04T17:41:15.773Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.773Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:15.881Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.882Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.882Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.882Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.882Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.882Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.882Z] [INFO] Session status: complete
[2025-03-04T17:41:15.882Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.883Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:15.919Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:15.981Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:15.981Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:15.981Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:15.981Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:15.981Z] [INFO] Session ID: undefined
[2025-03-04T17:41:15.981Z] [INFO] Payment status: paid
[2025-03-04T17:41:15.981Z] [INFO] Session status: complete
[2025-03-04T17:41:15.981Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:15.982Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:16.016Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:16.116Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:16.183Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:16.183Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:16.183Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:16.183Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:16.183Z] [INFO] Session ID: undefined
[2025-03-04T17:41:16.184Z] [INFO] Payment status: paid
[2025-03-04T17:41:16.184Z] [INFO] Session status: complete
[2025-03-04T17:41:16.184Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:16.184Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:16.219Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:16.226Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:16.226Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:16.226Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:16.227Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:16.227Z] [INFO] Session ID: undefined
[2025-03-04T17:41:16.227Z] [INFO] Payment status: paid
[2025-03-04T17:41:16.227Z] [INFO] Session status: complete
[2025-03-04T17:41:16.227Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:16.227Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:16.319Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:16.326Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:16.326Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:16.326Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:16.326Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:16.326Z] [INFO] Session ID: undefined
[2025-03-04T17:41:16.326Z] [INFO] Payment status: paid
[2025-03-04T17:41:16.326Z] [INFO] Session status: complete
[2025-03-04T17:41:16.326Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:16.326Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:16.419Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:16.460Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:16.460Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:16.460Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:16.460Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:16.460Z] [INFO] Session ID: undefined
[2025-03-04T17:41:16.461Z] [INFO] Payment status: paid
[2025-03-04T17:41:16.461Z] [INFO] Session status: complete
[2025-03-04T17:41:16.461Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:16.461Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:16.560Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:16.566Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:16.566Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:16.566Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:16.566Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:16.566Z] [INFO] Session ID: undefined
[2025-03-04T17:41:16.566Z] [INFO] Payment status: paid
[2025-03-04T17:41:16.566Z] [INFO] Session status: complete
[2025-03-04T17:41:16.566Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:16.567Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:16.690Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:16.691Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:16.691Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:16.691Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:16.691Z] [INFO] Session ID: undefined
[2025-03-04T17:41:16.691Z] [INFO] Payment status: paid
[2025-03-04T17:41:16.691Z] [INFO] Session status: complete
[2025-03-04T17:41:16.691Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:16.692Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:16.788Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:16.819Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:16.853Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:16.854Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:16.854Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:16.854Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:16.854Z] [INFO] Session ID: undefined
[2025-03-04T17:41:16.854Z] [INFO] Payment status: paid
[2025-03-04T17:41:16.854Z] [INFO] Session status: complete
[2025-03-04T17:41:16.854Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:16.854Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:16.941Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.007Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.007Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.007Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.007Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.007Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.007Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.007Z] [INFO] Session status: complete
[2025-03-04T17:41:17.007Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.008Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.034Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.034Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.034Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.034Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.034Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.034Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.034Z] [INFO] Session status: complete
[2025-03-04T17:41:17.034Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.034Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.044Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.144Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.216Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.216Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.216Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.217Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.217Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.217Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.217Z] [INFO] Session status: complete
[2025-03-04T17:41:17.217Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.218Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.252Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.261Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.261Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.261Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.261Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.261Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.261Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.261Z] [INFO] Session status: complete
[2025-03-04T17:41:17.261Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.261Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.351Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.359Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.359Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.359Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.359Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.359Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.359Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.359Z] [INFO] Session status: complete
[2025-03-04T17:41:17.359Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.360Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.450Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.468Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.468Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.468Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.468Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.468Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.468Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.468Z] [INFO] Session status: complete
[2025-03-04T17:41:17.468Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.469Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.571Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.571Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.571Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.571Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.571Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.571Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.571Z] [INFO] Session status: complete
[2025-03-04T17:41:17.571Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.572Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.575Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.692Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.693Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.693Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.693Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.693Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.693Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.693Z] [INFO] Session status: complete
[2025-03-04T17:41:17.693Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.694Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.707Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.844Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:17.850Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.850Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.851Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.851Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.851Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.851Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.851Z] [INFO] Session status: complete
[2025-03-04T17:41:17.851Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.851Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.937Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:17.937Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:17.937Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:17.937Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:17.937Z] [INFO] Session ID: undefined
[2025-03-04T17:41:17.937Z] [INFO] Payment status: paid
[2025-03-04T17:41:17.937Z] [INFO] Session status: complete
[2025-03-04T17:41:17.937Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:17.938Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:17.943Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.038Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.109Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.109Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.109Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.109Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.110Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.110Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.110Z] [INFO] Session status: complete
[2025-03-04T17:41:18.110Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:18.110Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:18.144Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.210Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.210Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.211Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.211Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.211Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.211Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.211Z] [INFO] Session status: complete
[2025-03-04T17:41:18.211Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:18.212Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:18.248Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.310Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.310Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.310Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.310Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.310Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.310Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.310Z] [INFO] Session status: complete
[2025-03-04T17:41:18.310Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:18.356Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:18.366Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.366Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.366Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.366Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.366Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.366Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.366Z] [INFO] Session status: complete
[2025-03-04T17:41:18.366Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:18.367Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:18.376Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.486Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.486Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.487Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.487Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.487Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.487Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.487Z] [INFO] Session status: complete
[2025-03-04T17:41:18.487Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:18.488Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:18.503Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.622Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.622Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.623Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.623Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.623Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.623Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.623Z] [INFO] Session status: complete
[2025-03-04T17:41:18.623Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:18.624Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:18.638Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.738Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.739Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.739Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.739Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.739Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.739Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.739Z] [INFO] Session status: complete
[2025-03-04T17:41:18.739Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:18.740Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:18.776Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.858Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.858Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.859Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.859Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.859Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.859Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.859Z] [INFO] Session status: complete
[2025-03-04T17:41:18.859Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:18.860Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:18.896Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:18.999Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:18.999Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:18.999Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:18.999Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:18.999Z] [INFO] Session ID: undefined
[2025-03-04T17:41:18.999Z] [INFO] Payment status: paid
[2025-03-04T17:41:18.999Z] [INFO] Session status: complete
[2025-03-04T17:41:18.999Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:19.001Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:19.016Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.147Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.166Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:19.166Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:19.166Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:19.166Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:19.166Z] [INFO] Session ID: undefined
[2025-03-04T17:41:19.166Z] [INFO] Payment status: paid
[2025-03-04T17:41:19.166Z] [INFO] Session status: complete
[2025-03-04T17:41:19.166Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:19.167Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:19.250Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:19.250Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:19.250Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:19.250Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:19.250Z] [INFO] Session ID: undefined
[2025-03-04T17:41:19.250Z] [INFO] Payment status: paid
[2025-03-04T17:41:19.250Z] [INFO] Session status: complete
[2025-03-04T17:41:19.250Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:19.251Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:19.283Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.370Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:19.371Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:19.371Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:19.371Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:19.371Z] [INFO] Session ID: undefined
[2025-03-04T17:41:19.371Z] [INFO] Payment status: paid
[2025-03-04T17:41:19.371Z] [INFO] Session status: complete
[2025-03-04T17:41:19.371Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:19.372Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:19.405Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.511Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:19.511Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:19.511Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:19.511Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:19.511Z] [INFO] Session ID: undefined
[2025-03-04T17:41:19.511Z] [INFO] Payment status: paid
[2025-03-04T17:41:19.511Z] [INFO] Session status: complete
[2025-03-04T17:41:19.511Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:19.512Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:19.533Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.644Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:19.644Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:19.644Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:19.644Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:19.644Z] [INFO] Session ID: undefined
[2025-03-04T17:41:19.644Z] [INFO] Payment status: paid
[2025-03-04T17:41:19.644Z] [INFO] Session status: complete
[2025-03-04T17:41:19.645Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:19.646Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:19.714Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.748Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.810Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:19.811Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:19.811Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:19.811Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:19.811Z] [INFO] Session ID: undefined
[2025-03-04T17:41:19.811Z] [INFO] Payment status: paid
[2025-03-04T17:41:19.811Z] [INFO] Session status: complete
[2025-03-04T17:41:19.811Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:19.812Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:19.846Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.944Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:19.952Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:19.952Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:19.952Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:19.952Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:19.952Z] [INFO] Session ID: undefined
[2025-03-04T17:41:19.952Z] [INFO] Payment status: paid
[2025-03-04T17:41:19.952Z] [INFO] Session status: complete
[2025-03-04T17:41:19.952Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:19.953Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.038Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:20.038Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:20.039Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:20.039Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:20.039Z] [INFO] Session ID: undefined
[2025-03-04T17:41:20.039Z] [INFO] Payment status: paid
[2025-03-04T17:41:20.039Z] [INFO] Session status: complete
[2025-03-04T17:41:20.039Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:20.040Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.067Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:20.067Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:20.068Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:20.068Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:20.068Z] [INFO] Session ID: undefined
[2025-03-04T17:41:20.068Z] [INFO] Payment status: paid
[2025-03-04T17:41:20.068Z] [INFO] Session status: complete
[2025-03-04T17:41:20.068Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:20.068Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.082Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:20.166Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:20.166Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:20.167Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:20.167Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:20.167Z] [INFO] Session ID: undefined
[2025-03-04T17:41:20.167Z] [INFO] Payment status: paid
[2025-03-04T17:41:20.167Z] [INFO] Session status: complete
[2025-03-04T17:41:20.167Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:20.167Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.199Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:20.320Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:20.322Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:20.322Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:20.322Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:20.322Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:20.322Z] [INFO] Session ID: undefined
[2025-03-04T17:41:20.322Z] [INFO] Payment status: paid
[2025-03-04T17:41:20.322Z] [INFO] Session status: complete
[2025-03-04T17:41:20.322Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:20.322Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.448Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:20.448Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:20.448Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:20.448Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:20.448Z] [INFO] Session ID: undefined
[2025-03-04T17:41:20.448Z] [INFO] Payment status: paid
[2025-03-04T17:41:20.448Z] [INFO] Session status: complete
[2025-03-04T17:41:20.448Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:20.448Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.450Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:20.586Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:20.610Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:20.610Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:20.610Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:20.610Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:20.610Z] [INFO] Session ID: undefined
[2025-03-04T17:41:20.610Z] [INFO] Payment status: paid
[2025-03-04T17:41:20.610Z] [INFO] Session status: complete
[2025-03-04T17:41:20.610Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:20.611Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.702Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:20.702Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:20.702Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:20.702Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:20.702Z] [INFO] Session ID: undefined
[2025-03-04T17:41:20.702Z] [INFO] Payment status: paid
[2025-03-04T17:41:20.702Z] [INFO] Session status: complete
[2025-03-04T17:41:20.703Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:20.704Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.772Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:20.804Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:20.807Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:20.807Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:20.807Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:20.807Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:20.807Z] [INFO] Session ID: undefined
[2025-03-04T17:41:20.807Z] [INFO] Payment status: paid
[2025-03-04T17:41:20.807Z] [INFO] Session status: complete
[2025-03-04T17:41:20.807Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:20.808Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:20.895Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:20.999Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.006Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.006Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.007Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.007Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.007Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.007Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.007Z] [INFO] Session status: complete
[2025-03-04T17:41:21.007Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.007Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.047Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.047Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.047Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.047Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.047Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.047Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.047Z] [INFO] Session status: complete
[2025-03-04T17:41:21.047Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.048Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.117Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.117Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.117Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.117Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.117Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.117Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.117Z] [INFO] Session status: complete
[2025-03-04T17:41:21.117Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.118Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.133Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.213Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.213Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.214Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.214Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.214Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.214Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.214Z] [INFO] Session status: complete
[2025-03-04T17:41:21.214Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.216Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.308Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.342Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.401Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.401Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.401Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.401Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.401Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.401Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.402Z] [INFO] Session status: complete
[2025-03-04T17:41:21.402Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.402Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.434Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.531Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.544Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.544Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.544Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.544Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.544Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.544Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.544Z] [INFO] Session status: complete
[2025-03-04T17:41:21.544Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.544Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.601Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.601Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.601Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.601Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.601Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.601Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.601Z] [INFO] Session status: complete
[2025-03-04T17:41:21.601Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.603Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.637Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.702Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.702Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.702Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.702Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.702Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.702Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.702Z] [INFO] Session status: complete
[2025-03-04T17:41:21.702Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.703Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.737Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.743Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.744Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.744Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.744Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.744Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.744Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.744Z] [INFO] Session status: complete
[2025-03-04T17:41:21.744Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.744Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.837Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.909Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.910Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.910Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.910Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.910Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.910Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.910Z] [INFO] Session status: complete
[2025-03-04T17:41:21.910Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:21.911Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:21.948Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:21.952Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:21.952Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:21.953Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:21.953Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:21.953Z] [INFO] Session ID: undefined
[2025-03-04T17:41:21.953Z] [INFO] Payment status: paid
[2025-03-04T17:41:21.953Z] [INFO] Session status: complete
[2025-03-04T17:41:21.953Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.005Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.040Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.050Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.050Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.050Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.050Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.050Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.050Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.050Z] [INFO] Session status: complete
[2025-03-04T17:41:22.050Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.050Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.142Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.210Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.211Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.211Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.211Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.211Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.211Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.211Z] [INFO] Session status: complete
[2025-03-04T17:41:22.211Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.212Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.265Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.269Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.269Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.269Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.269Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.270Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.270Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.270Z] [INFO] Session status: complete
[2025-03-04T17:41:22.270Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.270Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.446Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.446Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.446Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.446Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.446Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.446Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.446Z] [INFO] Session status: complete
[2025-03-04T17:41:22.446Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.446Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.450Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.555Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.568Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.568Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.568Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.568Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.568Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.568Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.568Z] [INFO] Session status: complete
[2025-03-04T17:41:22.568Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.620Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.654Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.723Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.723Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.723Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.723Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.724Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.724Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.724Z] [INFO] Session status: complete
[2025-03-04T17:41:22.724Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.725Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.759Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.822Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.822Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.822Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.822Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.822Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.822Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.822Z] [INFO] Session status: complete
[2025-03-04T17:41:22.822Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.823Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.857Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.869Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.869Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.869Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.869Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.870Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.870Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.870Z] [INFO] Session status: complete
[2025-03-04T17:41:22.870Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.870Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:22.956Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:22.975Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:22.975Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:22.975Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:22.975Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:22.975Z] [INFO] Session ID: undefined
[2025-03-04T17:41:22.975Z] [INFO] Payment status: paid
[2025-03-04T17:41:22.975Z] [INFO] Session status: complete
[2025-03-04T17:41:22.975Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:22.977Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.060Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:23.063Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:23.063Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:23.064Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:23.064Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:23.064Z] [INFO] Session ID: undefined
[2025-03-04T17:41:23.064Z] [INFO] Payment status: paid
[2025-03-04T17:41:23.064Z] [INFO] Session status: complete
[2025-03-04T17:41:23.064Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:23.064Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.161Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:23.168Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:23.168Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:23.168Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:23.168Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:23.168Z] [INFO] Session ID: undefined
[2025-03-04T17:41:23.168Z] [INFO] Payment status: paid
[2025-03-04T17:41:23.168Z] [INFO] Session status: complete
[2025-03-04T17:41:23.169Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:23.169Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.273Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:23.273Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:23.273Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:23.274Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:23.274Z] [INFO] Session ID: undefined
[2025-03-04T17:41:23.274Z] [INFO] Payment status: paid
[2025-03-04T17:41:23.274Z] [INFO] Session status: complete
[2025-03-04T17:41:23.274Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:23.274Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.289Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:23.389Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:23.390Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:23.390Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:23.390Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:23.390Z] [INFO] Session ID: undefined
[2025-03-04T17:41:23.390Z] [INFO] Payment status: paid
[2025-03-04T17:41:23.390Z] [INFO] Session status: complete
[2025-03-04T17:41:23.390Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:23.391Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.429Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:23.534Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:23.535Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:23.535Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:23.535Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:23.535Z] [INFO] Session ID: undefined
[2025-03-04T17:41:23.535Z] [INFO] Payment status: paid
[2025-03-04T17:41:23.535Z] [INFO] Session status: complete
[2025-03-04T17:41:23.535Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:23.535Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.551Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:23.651Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:23.652Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:23.652Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:23.652Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:23.652Z] [INFO] Session ID: undefined
[2025-03-04T17:41:23.652Z] [INFO] Payment status: paid
[2025-03-04T17:41:23.652Z] [INFO] Session status: complete
[2025-03-04T17:41:23.652Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:23.652Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.684Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:23.799Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:23.799Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:23.800Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:23.800Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:23.800Z] [INFO] Session ID: undefined
[2025-03-04T17:41:23.800Z] [INFO] Payment status: paid
[2025-03-04T17:41:23.800Z] [INFO] Session status: complete
[2025-03-04T17:41:23.800Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:23.800Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.814Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:23.912Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:23.912Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:23.912Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:23.912Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:23.912Z] [INFO] Session ID: undefined
[2025-03-04T17:41:23.912Z] [INFO] Payment status: paid
[2025-03-04T17:41:23.912Z] [INFO] Session status: complete
[2025-03-04T17:41:23.912Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:23.913Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:23.945Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:24.054Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:24.054Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:24.054Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:24.054Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:24.054Z] [INFO] Session ID: undefined
[2025-03-04T17:41:24.054Z] [INFO] Payment status: paid
[2025-03-04T17:41:24.054Z] [INFO] Session status: complete
[2025-03-04T17:41:24.054Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:24.054Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:24.063Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:24.161Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:24.161Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:24.162Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:24.162Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:24.162Z] [INFO] Session ID: undefined
[2025-03-04T17:41:24.162Z] [INFO] Payment status: paid
[2025-03-04T17:41:24.162Z] [INFO] Session status: complete
[2025-03-04T17:41:24.162Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:24.163Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:24.195Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:24.309Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:24.309Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:24.309Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:24.309Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:24.309Z] [INFO] Session ID: undefined
[2025-03-04T17:41:24.309Z] [INFO] Payment status: paid
[2025-03-04T17:41:24.309Z] [INFO] Session status: complete
[2025-03-04T17:41:24.309Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:24.310Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:24.315Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:24.447Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:24.511Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:24.511Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:24.511Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:24.511Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:24.511Z] [INFO] Session ID: undefined
[2025-03-04T17:41:24.511Z] [INFO] Payment status: paid
[2025-03-04T17:41:24.512Z] [INFO] Session status: complete
[2025-03-04T17:41:24.512Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:24.512Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:24.544Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:24.617Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:24.617Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:24.617Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:24.617Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:24.617Z] [INFO] Session ID: undefined
[2025-03-04T17:41:24.617Z] [INFO] Payment status: paid
[2025-03-04T17:41:24.617Z] [INFO] Session status: complete
[2025-03-04T17:41:24.617Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:24.618Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:24.651Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:24.687Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:24.688Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:24.688Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:24.688Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:24.688Z] [INFO] Session ID: undefined
[2025-03-04T17:41:24.688Z] [INFO] Payment status: paid
[2025-03-04T17:41:24.688Z] [INFO] Session status: complete
[2025-03-04T17:41:24.688Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:24.689Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:24.763Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:24.764Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:24.764Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:24.764Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:24.764Z] [INFO] Session ID: undefined
[2025-03-04T17:41:24.764Z] [INFO] Payment status: paid
[2025-03-04T17:41:24.764Z] [INFO] Session status: complete
[2025-03-04T17:41:24.764Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:24.767Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:24.800Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:24.867Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:24.867Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:24.867Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:24.867Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:24.867Z] [INFO] Session ID: undefined
[2025-03-04T17:41:24.867Z] [INFO] Payment status: paid
[2025-03-04T17:41:24.867Z] [INFO] Session status: complete
[2025-03-04T17:41:24.867Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:24.869Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:24.906Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:25.025Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:25.025Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:25.025Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:25.025Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:25.025Z] [INFO] Session ID: undefined
[2025-03-04T17:41:25.025Z] [INFO] Payment status: paid
[2025-03-04T17:41:25.025Z] [INFO] Session status: complete
[2025-03-04T17:41:25.026Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:25.027Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:25.065Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:25.149Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:25.150Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:25.150Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:25.150Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:25.150Z] [INFO] Session ID: undefined
[2025-03-04T17:41:25.150Z] [INFO] Payment status: paid
[2025-03-04T17:41:25.150Z] [INFO] Session status: complete
[2025-03-04T17:41:25.150Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:25.151Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:25.209Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:25.328Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:25.328Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:25.329Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:25.329Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:25.329Z] [INFO] Session ID: undefined
[2025-03-04T17:41:25.329Z] [INFO] Payment status: paid
[2025-03-04T17:41:25.329Z] [INFO] Session status: complete
[2025-03-04T17:41:25.329Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:25.330Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:25.370Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:25.486Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:25.486Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:25.486Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:25.486Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:25.486Z] [INFO] Session ID: undefined
[2025-03-04T17:41:25.486Z] [INFO] Payment status: paid
[2025-03-04T17:41:25.486Z] [INFO] Session status: complete
[2025-03-04T17:41:25.486Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:25.486Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:25.490Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:25.618Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:25.644Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:25.645Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:25.645Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:25.645Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:25.645Z] [INFO] Session ID: undefined
[2025-03-04T17:41:25.645Z] [INFO] Payment status: paid
[2025-03-04T17:41:25.645Z] [INFO] Session status: complete
[2025-03-04T17:41:25.645Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:25.645Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:25.741Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:25.742Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:25.742Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:25.742Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:25.742Z] [INFO] Session ID: undefined
[2025-03-04T17:41:25.742Z] [INFO] Payment status: paid
[2025-03-04T17:41:25.742Z] [INFO] Session status: complete
[2025-03-04T17:41:25.742Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:25.743Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:25.758Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:25.855Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:25.855Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:25.855Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:25.855Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:25.855Z] [INFO] Session ID: undefined
[2025-03-04T17:41:25.855Z] [INFO] Payment status: paid
[2025-03-04T17:41:25.855Z] [INFO] Session status: complete
[2025-03-04T17:41:25.855Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:25.856Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:25.892Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.001Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.001Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.001Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.001Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.001Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.001Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.001Z] [INFO] Session status: complete
[2025-03-04T17:41:26.001Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.002Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.010Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.112Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.178Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.179Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.179Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.179Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.179Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.179Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.179Z] [INFO] Session status: complete
[2025-03-04T17:41:26.179Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.180Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.211Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.282Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.283Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.283Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.283Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.283Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.283Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.283Z] [INFO] Session status: complete
[2025-03-04T17:41:26.283Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.284Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.322Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.405Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.406Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.406Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.406Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.406Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.406Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.406Z] [INFO] Session status: complete
[2025-03-04T17:41:26.406Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.407Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.423Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.486Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.486Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.486Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.486Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.486Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.486Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.486Z] [INFO] Session status: complete
[2025-03-04T17:41:26.486Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.487Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.518Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.619Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.620Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.620Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.620Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.620Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.620Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.620Z] [INFO] Session status: complete
[2025-03-04T17:41:26.620Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.621Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.645Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.645Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.645Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.645Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.645Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.645Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.645Z] [INFO] Session status: complete
[2025-03-04T17:41:26.645Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.646Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.663Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.740Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.740Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.740Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.740Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.740Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.740Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.740Z] [INFO] Session status: complete
[2025-03-04T17:41:26.741Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.741Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.777Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:26.904Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:26.905Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:26.905Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:26.905Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:26.905Z] [INFO] Session ID: undefined
[2025-03-04T17:41:26.905Z] [INFO] Payment status: paid
[2025-03-04T17:41:26.905Z] [INFO] Session status: complete
[2025-03-04T17:41:26.905Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:26.906Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:26.984Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.018Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.071Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:27.071Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:27.071Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:27.071Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:27.071Z] [INFO] Session ID: undefined
[2025-03-04T17:41:27.071Z] [INFO] Payment status: paid
[2025-03-04T17:41:27.071Z] [INFO] Session status: complete
[2025-03-04T17:41:27.071Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:27.072Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:27.106Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.205Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.220Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:27.220Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:27.220Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:27.220Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:27.220Z] [INFO] Session ID: undefined
[2025-03-04T17:41:27.220Z] [INFO] Payment status: paid
[2025-03-04T17:41:27.220Z] [INFO] Session status: complete
[2025-03-04T17:41:27.220Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:27.221Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:27.276Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:27.276Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:27.276Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:27.276Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:27.276Z] [INFO] Session ID: undefined
[2025-03-04T17:41:27.276Z] [INFO] Payment status: paid
[2025-03-04T17:41:27.276Z] [INFO] Session status: complete
[2025-03-04T17:41:27.276Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:27.277Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:27.327Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:27.327Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:27.327Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:27.327Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:27.327Z] [INFO] Session ID: undefined
[2025-03-04T17:41:27.327Z] [INFO] Payment status: paid
[2025-03-04T17:41:27.327Z] [INFO] Session status: complete
[2025-03-04T17:41:27.327Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:27.331Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:27.348Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.420Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:27.420Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:27.420Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:27.420Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:27.420Z] [INFO] Session ID: undefined
[2025-03-04T17:41:27.420Z] [INFO] Payment status: paid
[2025-03-04T17:41:27.420Z] [INFO] Session status: complete
[2025-03-04T17:41:27.420Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:27.421Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:27.457Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.574Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:27.574Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:27.575Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:27.575Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:27.575Z] [INFO] Session ID: undefined
[2025-03-04T17:41:27.575Z] [INFO] Payment status: paid
[2025-03-04T17:41:27.575Z] [INFO] Session status: complete
[2025-03-04T17:41:27.575Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:27.575Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:27.581Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.683Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:27.683Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:27.683Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:27.683Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:27.683Z] [INFO] Session ID: undefined
[2025-03-04T17:41:27.683Z] [INFO] Payment status: paid
[2025-03-04T17:41:27.684Z] [INFO] Session status: complete
[2025-03-04T17:41:27.684Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:27.685Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:27.718Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.831Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:27.831Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:27.831Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:27.831Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:27.831Z] [INFO] Session ID: undefined
[2025-03-04T17:41:27.832Z] [INFO] Payment status: paid
[2025-03-04T17:41:27.832Z] [INFO] Session status: complete
[2025-03-04T17:41:27.832Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:27.832Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:27.839Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:27.940Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.029Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.029Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.029Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.029Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.029Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.029Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.029Z] [INFO] Session status: complete
[2025-03-04T17:41:28.029Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.030Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.042Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.112Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.112Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.113Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.113Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.113Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.113Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.113Z] [INFO] Session status: complete
[2025-03-04T17:41:28.113Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.114Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.144Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.208Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.208Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.208Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.208Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.209Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.209Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.209Z] [INFO] Session status: complete
[2025-03-04T17:41:28.209Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.209Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.245Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.257Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.257Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.257Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.257Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.257Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.257Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.257Z] [INFO] Session status: complete
[2025-03-04T17:41:28.257Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.259Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.345Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.355Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.355Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.355Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.355Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.355Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.355Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.355Z] [INFO] Session status: complete
[2025-03-04T17:41:28.355Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.356Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.446Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.458Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.458Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.459Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.459Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.459Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.459Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.459Z] [INFO] Session status: complete
[2025-03-04T17:41:28.459Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.459Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.561Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.561Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.561Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.561Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.561Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.561Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.561Z] [INFO] Session status: complete
[2025-03-04T17:41:28.562Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.564Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.573Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.670Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.670Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.670Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.670Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.670Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.670Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.670Z] [INFO] Session status: complete
[2025-03-04T17:41:28.670Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.672Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.708Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.803Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.874Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.874Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.874Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.874Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.874Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.874Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.875Z] [INFO] Session status: complete
[2025-03-04T17:41:28.875Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.876Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:28.908Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:28.972Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:28.972Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:28.972Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:28.972Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:28.972Z] [INFO] Session ID: undefined
[2025-03-04T17:41:28.972Z] [INFO] Payment status: paid
[2025-03-04T17:41:28.972Z] [INFO] Session status: complete
[2025-03-04T17:41:28.972Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:28.973Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.007Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.020Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.020Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.020Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.020Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.020Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.020Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.020Z] [INFO] Session status: complete
[2025-03-04T17:41:29.020Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.020Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.102Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.130Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.130Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.130Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.130Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.130Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.130Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.130Z] [INFO] Session status: complete
[2025-03-04T17:41:29.130Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.131Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.213Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.223Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.223Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.223Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.223Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.223Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.223Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.223Z] [INFO] Session status: complete
[2025-03-04T17:41:29.223Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.224Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.313Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.318Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.318Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.318Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.318Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.318Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.318Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.318Z] [INFO] Session status: complete
[2025-03-04T17:41:29.318Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.318Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.414Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.427Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.427Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.427Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.427Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.427Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.427Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.427Z] [INFO] Session status: complete
[2025-03-04T17:41:29.427Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.429Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.514Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.523Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.523Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.524Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.524Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.524Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.524Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.524Z] [INFO] Session status: complete
[2025-03-04T17:41:29.524Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.524Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.634Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.634Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.634Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.634Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.634Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.634Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.634Z] [INFO] Session status: complete
[2025-03-04T17:41:29.634Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.638Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.643Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.739Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.739Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.739Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.739Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.739Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.739Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.739Z] [INFO] Session status: complete
[2025-03-04T17:41:29.739Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.740Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.776Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.863Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:29.863Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:29.863Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:29.863Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:29.863Z] [INFO] Session ID: undefined
[2025-03-04T17:41:29.863Z] [INFO] Payment status: paid
[2025-03-04T17:41:29.863Z] [INFO] Session status: complete
[2025-03-04T17:41:29.863Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:29.865Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:29.870Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:29.972Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.070Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.070Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.070Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.070Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.070Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.070Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.070Z] [INFO] Session status: complete
[2025-03-04T17:41:30.070Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.071Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.104Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.191Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.191Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.192Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.192Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.192Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.192Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.192Z] [INFO] Session status: complete
[2025-03-04T17:41:30.192Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.193Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.225Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.267Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.267Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.268Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.268Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.268Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.268Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.268Z] [INFO] Session status: complete
[2025-03-04T17:41:30.268Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.268Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.350Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.413Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.414Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.414Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.414Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.414Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.414Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.414Z] [INFO] Session status: complete
[2025-03-04T17:41:30.414Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.415Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.448Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.515Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.515Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.515Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.515Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.516Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.516Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.516Z] [INFO] Session status: complete
[2025-03-04T17:41:30.516Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.517Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.548Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.618Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.618Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.619Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.619Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.619Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.619Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.619Z] [INFO] Session status: complete
[2025-03-04T17:41:30.619Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.620Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.654Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.718Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.718Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.718Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.718Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.718Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.718Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.718Z] [INFO] Session status: complete
[2025-03-04T17:41:30.718Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.719Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.755Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.818Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.818Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.819Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.819Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.819Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.819Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.819Z] [INFO] Session status: complete
[2025-03-04T17:41:30.819Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.820Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.853Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.925Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.925Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.925Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.925Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.925Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.925Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.925Z] [INFO] Session status: complete
[2025-03-04T17:41:30.925Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.926Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:30.967Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:30.969Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:30.969Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:30.969Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:30.969Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:30.969Z] [INFO] Session ID: undefined
[2025-03-04T17:41:30.969Z] [INFO] Payment status: paid
[2025-03-04T17:41:30.969Z] [INFO] Session status: complete
[2025-03-04T17:41:30.969Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:30.970Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.061Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:31.068Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:31.068Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:31.068Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:31.068Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:31.068Z] [INFO] Session ID: undefined
[2025-03-04T17:41:31.068Z] [INFO] Payment status: paid
[2025-03-04T17:41:31.068Z] [INFO] Session status: complete
[2025-03-04T17:41:31.068Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:31.069Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.157Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:31.224Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:31.224Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:31.224Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:31.224Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:31.224Z] [INFO] Session ID: undefined
[2025-03-04T17:41:31.224Z] [INFO] Payment status: paid
[2025-03-04T17:41:31.224Z] [INFO] Session status: complete
[2025-03-04T17:41:31.224Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:31.225Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.257Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:31.280Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:31.281Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:31.281Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:31.281Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:31.281Z] [INFO] Session ID: undefined
[2025-03-04T17:41:31.281Z] [INFO] Payment status: paid
[2025-03-04T17:41:31.281Z] [INFO] Session status: complete
[2025-03-04T17:41:31.281Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:31.282Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.364Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:31.368Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:31.368Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:31.368Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:31.368Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:31.368Z] [INFO] Session ID: undefined
[2025-03-04T17:41:31.368Z] [INFO] Payment status: paid
[2025-03-04T17:41:31.368Z] [INFO] Session status: complete
[2025-03-04T17:41:31.368Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:31.369Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.463Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:31.470Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:31.470Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:31.470Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:31.470Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:31.470Z] [INFO] Session ID: undefined
[2025-03-04T17:41:31.470Z] [INFO] Payment status: paid
[2025-03-04T17:41:31.470Z] [INFO] Session status: complete
[2025-03-04T17:41:31.470Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:31.470Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.581Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:31.581Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:31.581Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:31.581Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:31.581Z] [INFO] Session ID: undefined
[2025-03-04T17:41:31.581Z] [INFO] Payment status: paid
[2025-03-04T17:41:31.581Z] [INFO] Session status: complete
[2025-03-04T17:41:31.581Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:31.582Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.588Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:31.708Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:31.708Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:31.708Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:31.708Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:31.709Z] [INFO] Session ID: undefined
[2025-03-04T17:41:31.709Z] [INFO] Payment status: paid
[2025-03-04T17:41:31.709Z] [INFO] Session status: complete
[2025-03-04T17:41:31.709Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:31.710Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.780Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:31.809Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:31.871Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:31.871Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:31.871Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:31.871Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:31.871Z] [INFO] Session ID: undefined
[2025-03-04T17:41:31.871Z] [INFO] Payment status: paid
[2025-03-04T17:41:31.872Z] [INFO] Session status: complete
[2025-03-04T17:41:31.872Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:31.872Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:31.934Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.030Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.030Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.030Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.030Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.030Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.030Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.030Z] [INFO] Session status: complete
[2025-03-04T17:41:32.030Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.031Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.049Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.125Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.125Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.125Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.125Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.125Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.125Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.125Z] [INFO] Session status: complete
[2025-03-04T17:41:32.125Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.126Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.162Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.225Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.226Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.226Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.226Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.226Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.226Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.226Z] [INFO] Session status: complete
[2025-03-04T17:41:32.226Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.227Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.261Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.326Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.326Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.326Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.326Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.326Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.326Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.326Z] [INFO] Session status: complete
[2025-03-04T17:41:32.326Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.327Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.364Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.370Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.370Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.370Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.370Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.370Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.370Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.370Z] [INFO] Session status: complete
[2025-03-04T17:41:32.370Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.371Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.461Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.474Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.474Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.474Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.474Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.474Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.474Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.474Z] [INFO] Session status: complete
[2025-03-04T17:41:32.474Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.475Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.560Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.574Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.574Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.574Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.574Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.574Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.574Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.574Z] [INFO] Session status: complete
[2025-03-04T17:41:32.574Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.575Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.663Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.673Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.673Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.673Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.673Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.673Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.673Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.673Z] [INFO] Session status: complete
[2025-03-04T17:41:32.673Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.674Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.762Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.779Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.780Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.780Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.780Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.780Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.780Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.780Z] [INFO] Session status: complete
[2025-03-04T17:41:32.780Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.781Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.867Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:32.881Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.881Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.881Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.881Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.882Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.882Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.882Z] [INFO] Session status: complete
[2025-03-04T17:41:32.882Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.883Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.981Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:32.982Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:32.982Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:32.982Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:32.982Z] [INFO] Session ID: undefined
[2025-03-04T17:41:32.982Z] [INFO] Payment status: paid
[2025-03-04T17:41:32.982Z] [INFO] Session status: complete
[2025-03-04T17:41:32.982Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:32.983Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:32.997Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.091Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:33.092Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:33.092Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:33.092Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:33.092Z] [INFO] Session ID: undefined
[2025-03-04T17:41:33.092Z] [INFO] Payment status: paid
[2025-03-04T17:41:33.092Z] [INFO] Session status: complete
[2025-03-04T17:41:33.092Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:33.093Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:33.126Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.231Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:33.232Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:33.232Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:33.232Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:33.232Z] [INFO] Session ID: undefined
[2025-03-04T17:41:33.232Z] [INFO] Payment status: paid
[2025-03-04T17:41:33.232Z] [INFO] Session status: complete
[2025-03-04T17:41:33.232Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:33.233Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:33.248Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.362Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:33.362Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:33.362Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:33.362Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:33.362Z] [INFO] Session ID: undefined
[2025-03-04T17:41:33.362Z] [INFO] Payment status: paid
[2025-03-04T17:41:33.362Z] [INFO] Session status: complete
[2025-03-04T17:41:33.362Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:33.375Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.410Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:33.506Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.527Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:33.527Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:33.527Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:33.527Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:33.527Z] [INFO] Session ID: undefined
[2025-03-04T17:41:33.527Z] [INFO] Payment status: paid
[2025-03-04T17:41:33.527Z] [INFO] Session status: complete
[2025-03-04T17:41:33.527Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:33.530Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:33.610Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.614Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:33.614Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:33.614Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:33.614Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:33.614Z] [INFO] Session ID: undefined
[2025-03-04T17:41:33.614Z] [INFO] Payment status: paid
[2025-03-04T17:41:33.614Z] [INFO] Session status: complete
[2025-03-04T17:41:33.614Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:33.615Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:33.709Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.719Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:33.720Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:33.720Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:33.720Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:33.720Z] [INFO] Session ID: undefined
[2025-03-04T17:41:33.720Z] [INFO] Payment status: paid
[2025-03-04T17:41:33.720Z] [INFO] Session status: complete
[2025-03-04T17:41:33.720Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:33.720Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:33.809Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.879Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:33.879Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:33.879Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:33.879Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:33.879Z] [INFO] Session ID: undefined
[2025-03-04T17:41:33.879Z] [INFO] Payment status: paid
[2025-03-04T17:41:33.879Z] [INFO] Session status: complete
[2025-03-04T17:41:33.879Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:33.880Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:33.915Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:33.979Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:33.979Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:33.979Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:33.979Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:33.979Z] [INFO] Session ID: undefined
[2025-03-04T17:41:33.979Z] [INFO] Payment status: paid
[2025-03-04T17:41:33.979Z] [INFO] Session status: complete
[2025-03-04T17:41:33.979Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:33.980Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.015Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:34.082Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:34.082Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:34.082Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:34.082Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:34.083Z] [INFO] Session ID: undefined
[2025-03-04T17:41:34.083Z] [INFO] Payment status: paid
[2025-03-04T17:41:34.083Z] [INFO] Session status: complete
[2025-03-04T17:41:34.083Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:34.084Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.118Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:34.186Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:34.186Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:34.187Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:34.187Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:34.187Z] [INFO] Session ID: undefined
[2025-03-04T17:41:34.187Z] [INFO] Payment status: paid
[2025-03-04T17:41:34.187Z] [INFO] Session status: complete
[2025-03-04T17:41:34.187Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:34.188Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.256Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:34.327Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:34.327Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:34.327Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:34.327Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:34.327Z] [INFO] Session ID: undefined
[2025-03-04T17:41:34.327Z] [INFO] Payment status: paid
[2025-03-04T17:41:34.327Z] [INFO] Session status: complete
[2025-03-04T17:41:34.327Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:34.329Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.368Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:34.372Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:34.372Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:34.372Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:34.372Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:34.373Z] [INFO] Session ID: undefined
[2025-03-04T17:41:34.373Z] [INFO] Payment status: paid
[2025-03-04T17:41:34.373Z] [INFO] Session status: complete
[2025-03-04T17:41:34.373Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:34.373Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.473Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:34.473Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:34.473Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:34.473Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:34.473Z] [INFO] Session ID: undefined
[2025-03-04T17:41:34.473Z] [INFO] Payment status: paid
[2025-03-04T17:41:34.473Z] [INFO] Session status: complete
[2025-03-04T17:41:34.474Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:34.474Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.546Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:34.586Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:34.587Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:34.587Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:34.587Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:34.587Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:34.587Z] [INFO] Session ID: undefined
[2025-03-04T17:41:34.587Z] [INFO] Payment status: paid
[2025-03-04T17:41:34.587Z] [INFO] Session status: complete
[2025-03-04T17:41:34.588Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:34.588Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.701Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:34.816Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:34.816Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:34.816Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:34.817Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:34.817Z] [INFO] Session ID: undefined
[2025-03-04T17:41:34.817Z] [INFO] Payment status: paid
[2025-03-04T17:41:34.817Z] [INFO] Session status: complete
[2025-03-04T17:41:34.817Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:34.817Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.829Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:41:34.863Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:41:34.864Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:41:34.864Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:41:34.864Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:41:34.864Z] [INFO] Session ID: undefined
[2025-03-04T17:41:34.864Z] [INFO] Payment status: paid
[2025-03-04T17:41:34.864Z] [INFO] Session status: complete
[2025-03-04T17:41:34.864Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:41:34.864Z] [ERROR] CRITICAL ERROR processing order on success page: 
Invalid `prisma.order.findUnique()` invocation:

{
  where: {
    stripeId: undefined,
?   id?: String,
?   AND?: OrderWhereInput | OrderWhereInput[],
?   OR?: OrderWhereInput[],
?   NOT?: OrderWhereInput | OrderWhereInput[],
?   userId?: StringNullableFilter | String | Null,
?   status?: StringFilter | String,
?   total?: FloatFilter | Float,
?   shippingAddress?: JsonFilter,
?   billingAddress?: JsonNullableFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   items?: OrderItemListRelationFilter,
?   user?: UserNullableScalarRelationFilter | UserWhereInput | Null
  }
}

Argument `where` of type OrderWhereUniqueInput needs at least one of `id` or `stripeId` arguments. Available options are marked with ?.
[2025-03-04T17:41:34.959Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:49:57.660Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:50:00.179Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:50:00.180Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:50:00.180Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:50:00.181Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:50:00.181Z] [INFO] Session ID: test_1741110600181
[2025-03-04T17:50:00.181Z] [INFO] Payment status: paid
[2025-03-04T17:50:00.181Z] [INFO] Session status: complete
[2025-03-04T17:50:00.182Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:50:00.184Z] [INFO] Test mode - skipping existing order check
[2025-03-04T17:50:00.184Z] [INFO] Order exists already? No
[2025-03-04T17:50:00.184Z] [INFO] Creating new order for session test_1741110600181
[2025-03-04T17:50:00.184Z] [INFO] Found 1 items in metadata
[2025-03-04T17:50:00.185Z] [INFO] First item: {"id":"123456","title":"Test Record","price":29.99,"quantity":1,"condition":"Near Mint","cover_image":"/placeholder.svg"}
[2025-03-04T17:50:00.185Z] [INFO] Creating order with 1 items
[2025-03-04T17:50:00.185Z] [INFO] Using user ID: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:50:00.185Z] [INFO] Creating order for user cm7niharu0000pvp2o2pd9ebv, stripe session: test_1741110600181
[2025-03-04T17:50:00.186Z] [INFO] Order total calculated: 29.99
[2025-03-04T17:50:00.186Z] [INFO] Saving shipping address to user profile for cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:50:00.480Z] [INFO] Successfully saved shipping address to user profile
[2025-03-04T17:50:01.512Z] [INFO] Order created successfully with ID: cm7usapmh0001pvbgeo596n7c
[2025-03-04T17:50:01.513Z] [INFO] Attempting to send confirmation email to user account: mehiskont@gmail.com
[2025-03-04T17:50:01.514Z] [INFO] Sending order confirmation email to mehiskont@gmail.com for order cm7usapmh0001pvbgeo596n7c
[2025-03-04T17:50:01.514Z] [INFO] Using email recipient: mehiskont@gmail.com (original: mehiskont@gmail.com) - development mode
[2025-03-04T17:50:02.700Z] [INFO] Order confirmation email sent successfully. ID: f100496f-a97a-49f0-a8b8-ae43c79f2510
[2025-03-04T17:50:02.701Z] [INFO] Sent order confirmation email to user account: mehiskont@gmail.com
[2025-03-04T17:50:02.701Z] [INFO] ✅ Order created successfully: cm7usapmh0001pvbgeo596n7c
[2025-03-04T17:50:03.357Z] [INFO] ✅ Order status updated to paid
[2025-03-04T17:50:03.357Z] [INFO] Updating Discogs inventory for item 123456, quantity 1
[2025-03-04T17:50:03.358Z] [INFO] Updating Discogs inventory for listing 123456, quantity purchased: 1
[2025-03-04T17:50:03.358Z] [INFO] Fetching current listing data from: https://api.discogs.com/marketplace/listings/123456
[2025-03-04T17:50:06.833Z] [ERROR] Error updating listing 123456: Failed to fetch https://api.discogs.com/marketplace/listings/123456 after 2 retries
[2025-03-04T17:50:06.834Z] [INFO] Attempting OAuth methods as complete fallback for 123456
[2025-03-04T17:50:17.068Z] [INFO] OAuth fallback: current quantity for 123456 is null
[2025-03-04T17:50:17.069Z] [INFO] Listing 123456 not found or already at zero quantity via OAuth
[2025-03-04T17:50:17.069Z] [INFO] ✅ Updated Discogs inventory for item 123456
[2025-03-04T17:50:17.069Z] [INFO] ====== ORDER PROCESSING COMPLETED ======
[2025-03-04T17:51:09.257Z] [INFO] Testing database connection before processing order...
[2025-03-04T17:51:09.575Z] [INFO] Database connection test result: [{"connected":1}]
[2025-03-04T17:51:09.576Z] [INFO] Success page loaded with session ID: MANUAL_TEST_MODE
[2025-03-04T17:51:09.576Z] [INFO] MANUAL TEST MODE: Creating mock session
[2025-03-04T17:51:09.576Z] [INFO] ====== PROCESSING ORDER ON SUCCESS PAGE ======
[2025-03-04T17:51:09.576Z] [INFO] Session ID: test_1741110669576
[2025-03-04T17:51:09.576Z] [INFO] Payment status: paid
[2025-03-04T17:51:09.576Z] [INFO] Session status: complete
[2025-03-04T17:51:09.576Z] [INFO] User ID from metadata: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:51:09.576Z] [INFO] Test mode - skipping existing order check
[2025-03-04T17:51:09.576Z] [INFO] Order exists already? No
[2025-03-04T17:51:09.576Z] [INFO] Creating new order for session test_1741110669576
[2025-03-04T17:51:09.576Z] [INFO] Found 1 items in metadata
[2025-03-04T17:51:09.576Z] [INFO] First item: {"id":"123456","title":"Test Record","price":29.99,"quantity":1,"condition":"Near Mint","cover_image":"/placeholder.svg"}
[2025-03-04T17:51:09.576Z] [INFO] Creating order with 1 items
[2025-03-04T17:51:09.576Z] [INFO] Using user ID: cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:51:09.577Z] [INFO] Creating order for user cm7niharu0000pvp2o2pd9ebv, stripe session: test_1741110669576
[2025-03-04T17:51:09.577Z] [INFO] Order total calculated: 29.99
[2025-03-04T17:51:09.577Z] [INFO] Saving shipping address to user profile for cm7niharu0000pvp2o2pd9ebv
[2025-03-04T17:51:09.855Z] [INFO] Successfully saved shipping address to user profile
[2025-03-04T17:51:10.796Z] [INFO] Order created successfully with ID: cm7usc74m0004pvbgbu254vsx
[2025-03-04T17:51:10.798Z] [INFO] Attempting to send confirmation email to user account: mehiskont@gmail.com
[2025-03-04T17:51:10.798Z] [INFO] Sending order confirmation email to mehiskont@gmail.com for order cm7usc74m0004pvbgbu254vsx
[2025-03-04T17:51:10.799Z] [INFO] Using email recipient: mehiskont@gmail.com (original: mehiskont@gmail.com) - development mode
[2025-03-04T17:51:11.632Z] [INFO] Order confirmation email sent successfully. ID: cf47cf03-7e18-4169-a4fc-32995aa62e97
[2025-03-04T17:51:11.632Z] [INFO] Sent order confirmation email to user account: mehiskont@gmail.com
[2025-03-04T17:51:11.632Z] [INFO] ✅ Order created successfully: cm7usc74m0004pvbgbu254vsx
[2025-03-04T17:51:12.231Z] [INFO] ✅ Order status updated to paid
[2025-03-04T17:51:12.233Z] [INFO] Updating Discogs inventory for item 123456, quantity 1
[2025-03-04T17:51:12.233Z] [INFO] Updating Discogs inventory for listing 123456, quantity purchased: 1
[2025-03-04T17:51:12.234Z] [INFO] Fetching current listing data from: https://api.discogs.com/marketplace/listings/123456
[2025-03-04T17:51:15.624Z] [ERROR] Error updating listing 123456: Failed to fetch https://api.discogs.com/marketplace/listings/123456 after 2 retries
[2025-03-04T17:51:15.625Z] [INFO] Attempting OAuth methods as complete fallback for 123456
[2025-03-04T17:51:25.352Z] [INFO] OAuth fallback: current quantity for 123456 is null
[2025-03-04T17:51:25.353Z] [INFO] Listing 123456 not found or already at zero quantity via OAuth
[2025-03-04T17:51:25.353Z] [INFO] ✅ Updated Discogs inventory for item 123456
[2025-03-04T17:51:25.353Z] [INFO] ====== ORDER PROCESSING COMPLETED ======
[2025-03-04T18:22:18.998Z] [[{"ID":3483822696,"TITLE":"NINJA TOOLS VOL.6","PRICE":221,"QUANTITY":2}]] Creating payment intent with items:
[2025-03-04T18:22:18.998Z] [CONSOLE[LEVEL] IS NOT A FUNCTION] Error creating payment intent:
[2025-03-04T18:24:09.131Z] [INFO] Creating payment intent with items:
Details: [{"id":3483822696,"title":"Ninja Tools Vol.6","price":221,"quantity":2}]
[2025-03-04T18:24:10.935Z] [INFO] Using origin header for base URL: http://localhost:3000
[2025-03-04T18:24:10.935Z] [INFO] Creating Stripe session with base URL: http://localhost:3000
[2025-03-04T18:24:11.652Z] [INFO] Created checkout session:
Details: cs_test_a15VFWpsKFvwy6qBfCf1ZDwPc9UoXR3oPZ54HTIKlebQe0mBoHr2UZGvf7
[2025-03-04T18:24:12.165Z] [INFO] Payment intent created:
Details: {"id":"pi_3Qz08WLKWZZc2yek0TITRkMx","amount":49096,"items":1,"sessionId":"cs_test_a15VFWpsKFvwy6qBfCf1ZDwPc9UoXR3oPZ54HTIKlebQe0mBoHr2UZGvf7"}
[2025-03-04T18:28:32.016Z] [INFO] Creating payment intent with items:
Details: [{"id":3483822696,"title":"Ninja Tools Vol.6","price":221,"quantity":2}]
[2025-03-04T18:28:33.182Z] [INFO] Using origin header for base URL: http://localhost:3000
[2025-03-04T18:28:33.182Z] [INFO] Creating Stripe session with base URL: http://localhost:3000
[2025-03-04T18:28:33.639Z] [INFO] Created checkout session:
Details: cs_test_a1KZwubTCcbnln5bK85iPwiDAmwDo61htslbgzpYvOq29oisuoKYoW9T0t
[2025-03-04T18:28:34.070Z] [INFO] Payment intent created:
Details: {"id":"pi_3Qz0CkLKWZZc2yek0FB5MjwT","amount":49096,"items":1,"sessionId":"cs_test_a1KZwubTCcbnln5bK85iPwiDAmwDo61htslbgzpYvOq29oisuoKYoW9T0t"}
[2025-03-04T18:32:10.008Z] [INFO] Creating payment intent with items:
Details: [{"id":3483822696,"title":"Ninja Tools Vol.6","price":221,"quantity":2}]
[2025-03-04T18:32:11.008Z] [INFO] Using origin header for base URL: http://localhost:3000
[2025-03-04T18:32:11.009Z] [INFO] Creating Stripe session with base URL: http://localhost:3000
[2025-03-04T18:32:11.507Z] [INFO] Created checkout session:
Details: cs_test_a1Y3jtOZ8OqR8R8C5SbMmhoXh2oiTwKIGGFXvXfbV6k9kk5qEQBv5WzlCJ
[2025-03-04T18:32:12.014Z] [INFO] Payment intent created:
Details: {"id":"pi_3Qz0GFLKWZZc2yek0p7pmFhC","amount":49096,"items":1,"sessionId":"cs_test_a1Y3jtOZ8OqR8R8C5SbMmhoXh2oiTwKIGGFXvXfbV6k9kk5qEQBv5WzlCJ"}
[2025-03-04T18:36:38.502Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:36:39.562Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:36:39.742Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:36:53.981Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:37:18.402Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:37:21.928Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:37:22.362Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:37:22.364Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:37:35.163Z] [INFO] Creating payment intent with items:
Details: [{"id":3483822696,"title":"Ninja Tools Vol.6","price":221,"quantity":2}]
[2025-03-04T18:37:36.074Z] [INFO] Using origin header for base URL: http://localhost:3000
[2025-03-04T18:37:36.075Z] [INFO] Creating Stripe session with base URL: http://localhost:3000
[2025-03-04T18:37:36.623Z] [INFO] Created checkout session:
Details: cs_test_a15ArBsoQV9zg23kmcmavSHZCtgIxirudDLKbYKCC8MQsAdE0Eo2hXm6Jp
[2025-03-04T18:37:37.130Z] [INFO] Payment intent created:
Details: {"id":"pi_3Qz0LVLKWZZc2yek0bzir5cq","amount":49096,"items":1,"sessionId":"cs_test_a15ArBsoQV9zg23kmcmavSHZCtgIxirudDLKbYKCC8MQsAdE0Eo2hXm6Jp"}
[2025-03-04T18:37:48.847Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
[2025-03-04T18:37:48.852Z] [INFO] Retrieved 0 orders for user cm7ubp0dl0000pvl0a6r1yxtj
